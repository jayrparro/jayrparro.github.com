<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Jayr Parro]]></title>
  <link href="http://jayrparro.github.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://jayrparro.github.com/"/>
  <updated>2013-01-15T00:03:39+08:00</updated>
  <id>http://jayrparro.github.com/</id>
  <author>
    <name><![CDATA[Jayr Parro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Adding drop shadow effect in a View]]></title>
    <link href="http://jayrparro.github.com/blog/2012/07/28/adding-drop-shadow-effect-in-a-view/"/>
    <updated>2012-07-28T00:00:00+08:00</updated>
    <id>http://jayrparro.github.com/blog/2012/07/28/adding-drop-shadow-effect-in-a-view</id>
    <content type="html"><![CDATA[<p>A simple implementation of adding a drop shadow effect in a view instead of using “extra” shadow images.</p>

<p>.h file:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &amp;lt;QuartzCore/QuartzCore.h&gt;;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>.m file:<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1">// add drop shadow</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">tempView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">masksToBounds</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">tempView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">shadowOffset</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">tempView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span> <span class="c1">// round corner</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">tempView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">shadowRadius</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">tempView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">shadowOpacity</span> <span class="o">=</span> <span class="mf">0.5</span><span class="p">;</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">tempView</span><span class="p">.</span><span class="n">layer</span><span class="p">.</span><span class="n">shadowPath</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIBezierPath</span> <span class="nl">bezierPathWithRect:</span><span class="n">self</span><span class="p">.</span><span class="n">tempView</span><span class="p">.</span><span class="n">bounds</span><span class="p">].</span><span class="n">CGPath</span><span class="p">;</span> <span class="c1">// drawing optimization</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Initial View:<br/>
<img src="/images/blog_images/initView.png.scaled500.png"></p>

<p>Output View:<br/>
<img src="/images/blog_images/outView.png.scaled500.png"></p>

<p>You can download the code <a href="https://github.com/jayrparro/Labs/tree/master/DropShadow">here</a>.</p>

<p>Happy Coding! :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stretchable Images in iOS 5]]></title>
    <link href="http://jayrparro.github.com/blog/2012/05/17/stretchable-images-in-ios-5/"/>
    <updated>2012-05-17T00:00:00+08:00</updated>
    <id>http://jayrparro.github.com/blog/2012/05/17/stretchable-images-in-ios-5</id>
    <content type="html"><![CDATA[<p>In iOS 5, working with UIImage <em>stretchableImageWithLeftCapWidth:topCapHeight:</em> is deprecated; in which I've used it heavily to reduced app size, dynamic variable-width buttons, and less image files added in the project.</p>

<p><strong>stretchableImageWithLeftCapWidth:topCapHeight:  </strong></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Creates and returns a new image object with the specified cap values &lt;br/&gt;</span>
</span><span class='line'><span class="c1">// (Deprecated in iOS 5.0. Deprecated. &lt;br/&gt;</span>
</span><span class='line'><span class="c1">// Use the resizableImageWithCapInsets: instead, &lt;br/&gt;</span>
</span><span class='line'><span class="c1">// specifying cap insets such that the interior is a 1x1 area.)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;-</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nl">stretchableImageWithLeftCapWidth:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">leftCapWidth</span> <span class="nl">topCapHeight:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">topCapHeight</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>So, looking forward to support stretchable images in iOS 5, we'll have to use this new method</p>

<p><strong>resizableImageWithCapInsets:</strong><br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="c1">// Creates and returns a new image object with the specified cap insets.&lt;br/&gt;</span>
</span><span class='line'><span class="o">-</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nl">resizableImageWithCapInsets:</span><span class="p">(</span><span class="n">UIEdgeInsets</span><span class="p">)</span><span class="n">capInsets</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>Parameters</strong> <br/>
capInsets - The values to use for the cap insets.</p>

<p>Return Value - A new image object with the specified cap insets.</p>

<p><strong>Discussion</strong> - <br/>
You use this method to add cap insets to an image or to change the existing cap insets of an image. In both cases, you get back a new image and the original image remains untouched.</p>

<p>During scaling or resizing of the image, areas covered by a cap are not scaled or resized. Instead, the pixel area not covered by the cap in each direction is tiled, left-to-right and top-to-bottom, to resize the image. This technique is often used to create variable-width buttons, which retain the same rounded corners but whose center region grows or shrinks as needed. For best performance, use a tiled area that is a 1x1 pixel area in size.</p>

<blockquote><p>As noted in the documentation, cap insets of the image are pixel area that are not affected when the image is scaled or resized dynamically. The pixels beyond the cap area are being tiled.</p></blockquote>

<p>In this example, I&rsquo;ve use this image with dimension of 12 (width) x 43 (height) pixels. You need to check in Photoshop the actual cap pixels area (or should ask your designer). The sample image I&rsquo;ve use has rounded corner in the top, which is specifically, 6 pixels width, and that&rsquo;s the cap area that I don&rsquo;t want to be scaled/resized.</p>

<p><img src="/images/blog_images/blue-header-frame.jpg.scaled500.jpg"></p>

<p>In pre-iOS 5, we&rsquo;ve use the stretchableImageWithLeftCapWidth:topCapHeight:<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// note- stretchableImageWithLeftCapWidth deprecated in iOS 5</span>
</span><span class='line'><span class="n">UIImage</span><span class="o">*</span> <span class="n">image1</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span> <span class="n">FILE_IMG_BLUE_HEADER</span><span class="p">]</span> <span class="nl">stretchableImageWithLeftCapWidth:</span><span class="mf">6.0</span> <span class="nl">topCapHeight:</span><span class="mf">0.0</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">UIImageView</span><span class="o">*</span> <span class="n">imageView1</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage:</span><span class="n">image1</span><span class="p">];</span>
</span><span class='line'><span class="n">imageView1</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="mi">115</span><span class="p">,</span> <span class="mf">100.0</span><span class="p">,</span> <span class="n">image1</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">imageView1</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The value parameter stretchableImageWithLeftCapWidth:6.0 is the left cap width pixel (6 pixels width as noted in our sample image).</p>

<p>In iOS 5+ onwards, we use resizableImageWithCapInsets:<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// note- resizableImageWithCapInsets use in iOS 5+</span>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">imageView3</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span> <span class="n">FILE_IMG_BLUE_HEADER</span><span class="p">]</span> <span class="nl">resizableImageWithCapInsets:</span><span class="n">UIEdgeInsetsMake</span><span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">)];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I've put a value for UIEdgeInsetsMake for both <em>left</em> and <em>right</em> which is 6-pixels cap width. Then, UIEdgeInsetsMake returns a UIEdgeInsets data struct-
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="k">typedef</span> <span class="k">struct</span> <span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">CGFloat</span> <span class="n">top</span><span class="p">,</span> <span class="n">left</span><span class="p">,</span> <span class="n">bottom</span><span class="p">,</span> <span class="n">right</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span> <span class="n">UIEdgeInsets</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Output:</p>

<ol>
<li>An imageView in which the image is just stretch and&nbsp;<em>no</em>cap/tiled being applied. It looks ugly.</li>
<li>An imageView in which the image is stretch and cap/tiled pixels are applied. The imageView is added in the view programmatically.</li>
<li>The image is stretch and cap/tiled pixels are applied. The imageView is added via an outlet.</li>
</ol>


<p>Screenshot:<br/>
<img src="/images/blog_images/Screen_Shot_2012-05-16_at_6.13.08_PM.png.scaled500.png"></p>

<p>You can download the sample code <a href="https://github.com/jayrparro/Labs/tree/master/StretchableImage">here</a>.</p>

<p>Happy Coding! :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPad as Second Monitor Display]]></title>
    <link href="http://jayrparro.github.com/blog/2012/04/08/ipad-as-second-monitor-display/"/>
    <updated>2012-04-08T00:00:00+08:00</updated>
    <id>http://jayrparro.github.com/blog/2012/04/08/ipad-as-second-monitor-display</id>
    <content type="html"><![CDATA[<p>DIY Set-up using iPad as second monitor display.</p>

<h4>Tools used:</h4>

<ol>
<li>iPad side - Install Mocha VNC</li>
<li>Mac OSX - Install ScreenRecycler</li>
</ol>


<p>A full guide <a href="http://www.geeksaresexy.net/2010/05/19/using-the-ipad-as-a-secondary-monitor/">here</a>.</p>

<h4>Screenshots:</h4>

<p><img src="/images/blog_images/IMG_1492.JPG.scaled1000.jpg"></p>

<p><img src="/images/blog_images/IMG_1493.JPG.scaled1000.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DLog – an NSLog replacement]]></title>
    <link href="http://jayrparro.github.com/blog/2012/01/18/dlog-an-nslog-replacement/"/>
    <updated>2012-01-18T00:00:00+08:00</updated>
    <id>http://jayrparro.github.com/blog/2012/01/18/dlog-an-nslog-replacement</id>
    <content type="html"><![CDATA[<p>It’s more convenient and will add to app performance to log some statements only in Debug mode and avoiding them in release mode.</p>

<p>Plus, we can see in debug console the function &amp; line numbers being logged.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#ifdef DEBUG&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="err">#</span><span class="n">define</span> <span class="n">DLog</span><span class="p">(</span><span class="n">fmt</span><span class="p">,</span> <span class="p">...)</span> <span class="n">NSLog</span><span class="p">((</span><span class="s">@&quot;%s [Line %d] &quot;</span> <span class="n">fmt</span><span class="p">),</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">PRETTY_FUNCTION</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">LINE</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">,</span> <span class="err">##</span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">VA_ARGS</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">);</span><span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span><span class='line'><span class="cp">#else&lt;br/&gt;</span>
</span><span class='line'><span class="cp">#define DLog(...)&lt;br/&gt;</span>
</span><span class='line'><span class="cp">#endif&lt;br/&gt;</span>
</span><span class='line'><span class="cp">#define ALog(...) NSLog(&lt;strong&gt;VA_ARGS&lt;/strong&gt;)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>First add the following to the _Prefix.pch file in your Xcode project: <br/>
In the project’s Debug build configuration, set preprocessor macro <strong>DEBUG=1</strong></p>

<p>Note:<br/>
DLog – log only in debug mode<br/>
ALog – log for both configurations (debug &amp; release)</p>

<p>More info here:<br/>
<a href="http://kuoi.com/~kamikaze/read.php?topic=Cocoa&amp;id=158">http://kuoi.com/~kamikaze/read.php?topic=Cocoa&amp;id=158</a>
<a href="http://www.cimgf.com/2009/01/24/dropping-nslog-in-release-builds/">http://www.cimgf.com/2009/01/24/dropping-nslog-in-release-builds/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simulators in Xcode 4.2]]></title>
    <link href="http://jayrparro.github.com/blog/2011/10/20/simulators-in-xcode-4-2/"/>
    <updated>2011-10-20T00:00:00+08:00</updated>
    <id>http://jayrparro.github.com/blog/2011/10/20/simulators-in-xcode-4-2</id>
    <content type="html"><![CDATA[<p>In XCode 4.2, now you can install pre iOS 5 Simulators which is very flexible for debugging previous versions of iOS 5.</p>


<p>See the screenshots.</p>


<p><img src="/images/blog_images/Screen_shot_2011-10-20_at_PM_04.08.29.png.scaled1000.png"></p>

<p><img src="/images/blog_images/Screen_shot_2011-10-20_at_PM_04.09.29.png.scaled1000.png"></p>
]]></content>
  </entry>
  
</feed>
